{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2021-03-20T19:13:42.071Z",
    "end": "2021-03-20T19:13:42.916Z",
    "duration": 801,
    "testsRegistered": 6,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 5,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "038cfcab-bfb9-4011-9182-5007578b4cea",
      "title": "",
      "fullFile": "cypress\\integration\\jsTaskMoveSpiderDOM.spec.js",
      "file": "cypress\\integration\\jsTaskMoveSpiderDOM.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6d520147-7043-4427-a084-9590341bf4a3",
          "title": "Spider",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should go down left",
              "fullTitle": "Spider should go down left",
              "timedOut": null,
              "duration": 801,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.wall').click('bottomLeft');\ncy.get('.spider').should(function ($spider) {\n  var spiderTop = $spider.position().top;\n  var spiderLeft = $spider.position().left;\n  expect(spiderTop).to.equal(350);\n  expect(spiderLeft).to.equal(0);\n});",
              "err": {
                "message": "SyntaxError: The following error originated from your application code, not from Cypress.\n\n  > Unexpected token '<'\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Spider`",
                "estack": "SyntaxError: The following error originated from your application code, not from Cypress.\n\n  > Unexpected token '<'\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Spider`",
                "diff": null
              },
              "uuid": "8e9d1f04-9b50-4513-9de3-fc94b3fc0e6e",
              "parentUUID": "6d520147-7043-4427-a084-9590341bf4a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should go up right",
              "fullTitle": "Spider should go up right",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wall').click('topRight');\ncy.get('.spider').should(function ($spider) {\n  var spiderTop = $spider.position().top;\n  var spiderLeft = $spider.position().left;\n  expect(spiderTop).to.equal(0);\n  expect(spiderLeft).to.equal(350);\n});",
              "err": {},
              "uuid": "c9983699-78fc-45a9-be3b-e12727876948",
              "parentUUID": "6d520147-7043-4427-a084-9590341bf4a3",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should go up",
              "fullTitle": "Spider should go up",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wall').click('top');\ncy.get('.spider').should(function ($spider) {\n  var spiderTop = $spider.position().top;\n  var spiderLeft = $spider.position().left;\n  expect(spiderTop).to.equal(0);\n  expect(spiderLeft).to.equal(175);\n});",
              "err": {},
              "uuid": "59055f08-37e6-4c43-a076-6500430cbdbf",
              "parentUUID": "6d520147-7043-4427-a084-9590341bf4a3",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should go to the center",
              "fullTitle": "Spider should go to the center",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wall').click('center');\ncy.get('.spider').should(function ($spider) {\n  var spiderTop = $spider.position().top;\n  var spiderLeft = $spider.position().left;\n  expect(spiderTop).to.equal(175);\n  expect(spiderLeft).to.equal(175);\n});",
              "err": {},
              "uuid": "1d4381b6-9cc7-43b6-b542-4fec4cee58e1",
              "parentUUID": "6d520147-7043-4427-a084-9590341bf4a3",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should go down right",
              "fullTitle": "Spider should go down right",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wall').click('bottomRight');\ncy.get('.spider').should(function ($spider) {\n  var spiderTop = $spider.position().top;\n  var spiderLeft = $spider.position().left;\n  expect(spiderTop).to.equal(350);\n  expect(spiderLeft).to.equal(350);\n});",
              "err": {},
              "uuid": "96234c02-3def-4d60-b6c9-3575d9ee7a9f",
              "parentUUID": "6d520147-7043-4427-a084-9590341bf4a3",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should not move on \n      the click out of the wall",
              "fullTitle": "Spider should not move on \n      the click out of the wall",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('body').click('top');\ncy.get('.spider').should(function ($spider) {\n  var spiderTop = $spider.position().top;\n  var spiderLeft = $spider.position().left;\n  expect(spiderTop).to.equal(0);\n  expect(spiderLeft).to.equal(0);\n});",
              "err": {},
              "uuid": "abf271ce-da8c-4e3a-9704-b424401720c5",
              "parentUUID": "6d520147-7043-4427-a084-9590341bf4a3",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8e9d1f04-9b50-4513-9de3-fc94b3fc0e6e"
          ],
          "pending": [],
          "skipped": [
            "c9983699-78fc-45a9-be3b-e12727876948",
            "59055f08-37e6-4c43-a076-6500430cbdbf",
            "1d4381b6-9cc7-43b6-b542-4fec4cee58e1",
            "96234c02-3def-4d60-b6c9-3575d9ee7a9f",
            "abf271ce-da8c-4e3a-9704-b424401720c5"
          ],
          "duration": 801,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "raw_reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}