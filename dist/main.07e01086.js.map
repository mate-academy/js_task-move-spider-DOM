{"version":3,"sources":["scripts/main.js"],"names":["wall","document","querySelector","spider","addEventListener","e","target","closest","wallRect","getBoundingClientRect","wallCoords","left","top","spiderSizes","offsetWidth","offsetHeight","clientX","clientLeft","clientY","clientTop","style","checkCoord","axis","coord","wallSize","spiderSize","wallGap","width","height","maxCoord"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASC,cAAc,WAEtCD,SAASG,iBAAiB,QAAS,SAAAC,GAC7B,GAACA,EAAEC,OAAOC,QAAQ,SAAlB,CAIEC,IAAAA,EAAWR,EAAKS,wBAEhBC,EAAa,CAACF,EAASG,KAAMH,EAASI,KACtCC,EAAc,CAACV,EAAOW,YAAaX,EAAOY,cAE1CJ,EAAON,EAAEW,QAAUN,EAAW,GAAKG,EAAY,GAAK,EAAIb,EAAKiB,WAC7DL,EAAMP,EAAEa,QAAUR,EAAW,GAAKG,EAAY,GAAK,EAAIb,EAAKmB,UA+BlEhB,EAAOiB,MAAMR,IAASS,GAAAA,OAAAA,EAAW,IAAKT,GAAtC,MACAT,EAAOiB,MAAMT,KAAUU,GAAAA,OAAAA,EAAW,IAAKV,GAAvC,MA9BSU,SAAAA,EAAWC,EAAMC,GACpBC,IAAAA,EAAUC,EAAYC,EAElBJ,OAAAA,GACD,IAAA,IACHE,EAAWhB,EAASmB,MACpBF,EAAaZ,EAAY,GACzBa,EAAU1B,EAAKiB,WACf,MACG,IAAA,IACHO,EAAWhB,EAASoB,OACpBH,EAAaZ,EAAY,GACzBa,EAAU1B,EAAKmB,UAIfI,GAAAA,EAAQ,EACH,OAAA,EAGHM,IAAAA,EAAWL,EAAWC,EAAuB,EAAVC,EAErCH,OAAAA,EAAQM,EACHA,EAGFN","file":"main.07e01086.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst wall = document.querySelector('.wall');\nconst spider = document.querySelector('.spider');\n\ndocument.addEventListener('click', e => {\n  if (!e.target.closest('.wall')) {\n    return;\n  }\n\n  const wallRect = wall.getBoundingClientRect();\n\n  const wallCoords = [wallRect.left, wallRect.top];\n  const spiderSizes = [spider.offsetWidth, spider.offsetHeight];\n\n  const left = e.clientX - wallCoords[0] - spiderSizes[0] / 2 - wall.clientLeft;\n  const top = e.clientY - wallCoords[1] - spiderSizes[1] / 2 - wall.clientTop;\n\n  function checkCoord(axis, coord) {\n    let wallSize, spiderSize, wallGap;\n\n    switch (axis) {\n      case 'x':\n        wallSize = wallRect.width;\n        spiderSize = spiderSizes[0];\n        wallGap = wall.clientLeft;\n        break;\n      case 'y':\n        wallSize = wallRect.height;\n        spiderSize = spiderSizes[1];\n        wallGap = wall.clientTop;\n        break;\n    }\n\n    if (coord < 0) {\n      return 0;\n    }\n\n    const maxCoord = wallSize - spiderSize - wallGap * 2;\n\n    if (coord > maxCoord) {\n      return maxCoord;\n    }\n\n    return coord;\n  }\n\n  spider.style.top = `${checkCoord('y', top)}px`;\n  spider.style.left = `${checkCoord('x', left)}px`;\n});\n"]}