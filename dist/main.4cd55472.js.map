{"version":3,"sources":["scripts/main.js"],"names":["spider","document","querySelector","wall","rect","getBoundingClientRect","addEventListener","e","crossTop","clientY","height","top","parseInt","getComputedStyle","border","crossBottom","bottom","crossLeft","clientX","left","width","crosRight","right","style","offsetTop","offsetLeft"],"mappings":";AAAA,aAEA,IAAMA,EAASC,SAASC,cAAc,WAChCC,EAAOF,SAASC,cAAc,SAC9BE,EAAOD,EAAKE,wBAElBJ,SAASK,iBAAiB,QAAS,SAAAC,GAC3BC,IAAAA,EAAYD,EAAEE,SAAWT,EAAOU,OAAS,EAAI,IAAMN,EAAKO,KAC3DJ,EAAEE,QAAUL,EAAKO,IAAMC,SAASC,iBAAiBV,GAAMW,QAEpDC,EAAeR,EAAEE,SAAWT,EAAOU,OAAS,EAAI,IAAMN,EAAKY,QAC9DT,EAAEE,QAAUL,EAAKY,OAASJ,SAASC,iBAAiBV,GAAMW,QAGvDG,EACHV,EAAEW,QAAUd,EAAKe,KAAOP,SAASC,iBAAiBV,GAAMW,SACtDP,EAAEW,QAAWlB,EAAOoB,MAAQ,EAAKhB,EAAKe,KAErCE,EACJd,EAAEW,QAAUd,EAAKkB,MAAQV,SAASC,iBAAiBV,GAAMW,SACvDP,EAAEW,QAAWlB,EAAOoB,MAAQ,EAAKhB,EAAKkB,MAErCd,GAAaO,EAGPP,EACTR,EAAOuB,MAAMZ,IAAM,EACVI,IACTf,EAAOuB,MAAMZ,IAASC,GAAAA,OAAAA,SAASC,iBAAiBV,GAAMO,QAClDV,EAAOU,OADX,OALAV,EAAOuB,MAAMZ,IAASJ,GAAAA,OAAAA,EAAEE,QACpBN,EAAKqB,WAAaxB,EAAOU,OAAS,EAAI,IAD1C,MASGO,GAAcI,EAGRJ,EACTjB,EAAOuB,MAAMJ,KAAO,EACXE,IACTrB,EAAOuB,MAAMJ,KAAUP,GAAAA,OAAAA,SAASC,iBAAiBV,GAAMiB,OACnDpB,EAAOoB,MADX,OALApB,EAAOuB,MAAMJ,KAAUZ,GAAAA,OAAAA,EAAEW,QACrBf,EAAKsB,YAAczB,EAAOoB,MAAQ,EAAI,GAD1C","file":"main.4cd55472.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst spider = document.querySelector('.spider');\nconst wall = document.querySelector('.wall');\nconst rect = wall.getBoundingClientRect();\n\ndocument.addEventListener('click', e => {\n  const crossTop = (e.clientY - (spider.height / 2 + 10) < rect.top)\n  || e.clientY < rect.top + parseInt(getComputedStyle(wall).border);\n\n  const crossBottom = (e.clientY + (spider.height / 2 + 10) > rect.bottom)\n  || e.clientY > rect.bottom - parseInt(getComputedStyle(wall).border\n  );\n\n  const crossLeft\n   = e.clientX < rect.left + parseInt(getComputedStyle(wall).border)\n   || (e.clientX - (spider.width / 2) < rect.left);\n\n  const crosRight\n  = e.clientX > rect.right + parseInt(getComputedStyle(wall).border)\n  || (e.clientX + (spider.width / 2) > rect.right);\n\n  if (!crossTop && !crossBottom) {\n    spider.style.top = `${e.clientY\n      - wall.offsetTop - (spider.height / 2 + 12)}px`;\n  } else if (crossTop) {\n    spider.style.top = 0;\n  } else if (crossBottom) {\n    spider.style.top = `${parseInt(getComputedStyle(wall).height)\n      - spider.height}px`;\n  }\n\n  if (!crossLeft && !crosRight) {\n    spider.style.left = `${e.clientX\n      - wall.offsetLeft - (spider.width / 2 + 7)}px`;\n  } else if (crossLeft) {\n    spider.style.left = 0;\n  } else if (crosRight) {\n    spider.style.left = `${parseInt(getComputedStyle(wall).width)\n      - spider.width}px`;\n  }\n});\n"]}